@{
var gen = Model as RazorModel;

Func<string, string> GetAttributeString = attr => {
if (string.IsNullOrEmpty(attr)) return "";
return string.Concat(", ", attr.Trim('[', ']'));
};
Func<string, string> GetDefaultValue = defval => {
if (string.IsNullOrEmpty(defval)) return "";
return " = " + defval + ";";
};
}@{
switch (gen.fsql.Ado.DataType) {
case FreeSql.DataType.PostgreSQL:
break;
case FreeSql.DataType.SqlServer:
case FreeSql.DataType.MySql:
default:

break;
}
}
using FreeSql.DataAnnotations;

namespace @gen.NameSpace;

@if (string.IsNullOrEmpty(gen.table.Comment) == false) {
@:///<summary>
@:/// @gen.table.Comment.Replace("\r\n", "\n").Replace("\n", "\r\n		/// ")
@:///</summary>
}
@(gen.GetTableAttribute())
public partial class @gen.GetCsName(gen.FullTableName) {

@foreach (var col in gen.columns) {

if (string.IsNullOrEmpty(col.Comment) == false) {

    @:/// <summary>
	@:/// @col.Comment.Replace("\r\n", "\n").Replace("\n", "\r\n		/// ")
	@:/// </summary>
    }
    @:@(gen.GetColumnAttribute(col, true))
    @:public @gen.GetCsType(col) @gen.GetCsName(col.Name) { get; set; }@GetDefaultValue(gen.GetColumnDefaultValue(col, false))
    @:
    }
}
@gen.GetMySqlEnumSetDefine()
